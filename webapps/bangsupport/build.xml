<!-- build configuration -->
<project name="bangsupport" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <property name="base.dir" value="../.."/>
  <property name="app.name" value="bangsupport"/>

  <!-- import the generic webapp build file and library dependencies -->
  <property name="dist.depends" value="gcompile"/>
  <property name="distclean.depends" value="clean-gwtcache"/>
  <import file="${base.dir}/package/etc/webapp-build.xml"/>

  <!-- prepares the application directories -->
  <target name="prepare" depends="-init-ooo,common-webapp-prepare">
    <!-- copy our configuration into place -->
    <copy file="${base.dir}/${deploy.dir}/server.properties" todir="${build.dir}/WEB-INF/classes"/>

    <!-- we need bang-code.jar for some database bits -->
    <copy file="${base.dir}/${deploy.dir}/bang-code.jar" todir="${deploy.dir}/lib"/>

    <!-- we get all other dependencies from Maven -->
    <artifact:dependencies filesetId="maven.fileset">
      <dependency groupId="mysql" artifactId="mysql-connector-java" version="5.1.6"/>
      <remoteRepository refid="ooo.maven.depends.repo"/>
      <dependency groupId="com.threerings" artifactId="underwire" version="1.0"/>
    </artifact:dependencies>
    <copy todir="${deploy.dir}/lib">
      <fileset refid="maven.fileset"/>
      <mapper type="flatten"/>
    </copy>

    <!-- set up the GWT classpath -->
    <artifact:dependencies pathId="maven.gwt.classpath">
      <dependency groupId="com.google.gwt" artifactId="gwt-dev" version="2.1.0"/>
      <remoteRepository refid="ooo.maven.depends.repo"/>
      <dependency groupId="com.threerings" artifactId="underwire-gwt" version="1.0"/>
    </artifact:dependencies>
    <path id="gwt.classpath">
      <path refid="maven.gwt.classpath"/>
      <pathelement location="src/gwt"/>
    </path>
  </target>

  <!-- runs the GWT compiler -->
  <target name="gcompile" depends="prepare">
    <for list="bang_user,bang_admin" param="module">
      <sequential>
        <java fork="true" failonerror="false" resultproperty="gwt.result"
              classpathref="gwt.classpath" classname="com.google.gwt.dev.Compiler">
          <!--<arg value="-style"/><arg value="PRETTY"/>-->
          <arg value="-war"/><arg value="${deploy.dir}/www"/>
          <arg value="@{module}"/>
          <!-- gather all the compiler output into a property -->
          <redirector outputproperty="redirector.out"/>
        </java>

        <!-- until the GWT compiler does the right thing echo errors/warnings correctly -->
        <if><contains string="${redirector.out}" substring="[ERROR]"/><then>
          <echo level="error">${redirector.out}</echo>
          <!-- be really, really sure that the build fails if we get an error logs -->
          <property name="has.errors" value="true"/>
        </then><elseif><contains string="${redirector.out}" substring="[WARNING]"/><then>
          <echo level="warning">${redirector.out}</echo>
        </then></elseif><else>
          <echo level="info">${redirector.out}</echo>
        </else></if>

        <!-- fail the build if the GWT compiler returned 1 or errors were detected -->
        <fail><condition><or>
          <equals arg1="${gwt.result}" arg2="1"/>
          <isset property="has.errors"/>
        </or></condition></fail>

        <!-- if we're being built by a developer, copy our results right into the doc tree -->
        <if><isset property="bang_web_dir"/><then>
          <copy todir="${bang_web_dir}/support">
            <fileset dir="${deploy.dir}/www/@{module}" includes="**/*"/>
          </copy>
        </then></if>
      </sequential>
    </for>
  </target>

  <!-- cleans out the .gwt-cache-->
  <target name="clean-gwtcache">
    <delete dir=".gwt-cache"/>
  </target>

  <!-- runs our webapp in jetty -->
  <target name="devmode" depends="-init-jetty-ant,compile">
    <jetty tempDirectory="${deploy.dir}/jetty-temp">
      <webApp name="${app.name}" warfile="${basedir}/${deploy.dir}/${app.name}"
              contextpath="/bangsupport" scanIntervalSeconds="2">
        <!-- things that might change -->
        <scanTargets dir="${basedir}">
          <include name="etc/web.xml"/>
          <include name="${deploy.dir}/classes/**/*"/>
          <include name="${deploy.dir}/lib/**/*.jar"/>
        </scanTargets>
      </webApp>
    </jetty>
  </target>
</project>
