#!/bin/sh
#
# $Id$
#
# Startup script for the Bang! game server. Currently works on Debian and
# Redhat 9.

WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
    echo "This script must be run as root."
    exit 255
fi

# Locate our ocean directory
BANG_HOME=`dirname $0`/..
BANG_HOME=`cd $BANG_HOME ; pwd`
if [ ! -f $BANG_HOME/server.conf ]; then
    echo "Unable to infer BANG_HOME. No server.conf file?"
    exit 1
fi

# Read in our configuration
. $BANG_HOME/server.conf

# Override NODE if passed on the command line
if [ ! -z "$2" ]; then
    NODE=$2
fi

DAEMON=$BANG_HOME/bin/bangrespawn
RESPAWN_PIDFILE=$BANG_HOME/run/bangrespawn-$NODE.pid
SERVER_PIDFILE=$BANG_HOME/run/bangserver-$NODE.pid
LOGFILE=$BANG_HOME/log/respawn-$NODE.log

# See how we were called
case "$1" in
  start)
        # Make sure bangrespawn is not currently running
	if [ -f $RESPAWN_PIDFILE ]; then
	    echo "bangrespawn appears to be already running for $NODE."
            echo "Run '$0 stop' to stop it first."
	    exit 1
	fi

        # Make sure there are no hung Bang server processes
        if [ -f $SERVER_PIDFILE ]; then
            PID=`cat $SERVER_PIDFILE`
            RPIDS=`ps auxww | grep " $PID " | grep java | awk '{ print $2 }' | sort -n | head -1`
            if [ ! -z "$RPIDS" ]; then
                echo "WARNING: A $NODE Bang server process is currently running."
                echo "If it has failed and you wish to forcibly restart it, please"
                echo "execute the following commands:"
                echo ""
                echo "% kill -QUIT $RPIDS"
                echo "% kill -KILL $RPIDS"
                echo ""
                echo "And then rerun this script."
                exit -1
            fi
        fi

        # Let's blow that file descriptor limit wide open baby!
        ulimit -n 4096
        # Bump our maximum data segment size to 1.5 gigs
        ulimit -d 1572864

        # Go ahead and start things up
        echo -n "Starting $DAEMON: "
        touch $RESPAWN_PIDFILE $LOGFILE
        chown $BANG_USER $RESPAWN_PIDFILE $LOGFILE
        su -m $BANG_USER -c "$DAEMON $NODE $RESPAWN_PIDFILE $SERVER_PIDFILE" >$LOGFILE 2>&1 </dev/null &
        echo "started."
        ;;

  stop)
	if [ ! -f $RESPAWN_PIDFILE ]; then
	    echo "No $RESPAWN_PIDFILE exists. Is bangrespawn running?"
	    exit 1
	fi
        echo -n "Shutting down bang node $NODE, "
        kill -INT `cat $SERVER_PIDFILE`
        echo -n "bangrespawn: "
        kill `cat $RESPAWN_PIDFILE`
        echo "stopped."
        rm -f $RESPAWN_PIDFILE $SERVER_PIDFILE
        ;;

  unspawn)
	if [ ! -f $RESPAWN_PIDFILE ]; then
	    echo "No $RESPAWN_PIDFILE exists. Is bangrespawn running?"
	    exit 1
	fi
        echo -n "Shutting down bangrespawn: "
        kill `cat $RESPAWN_PIDFILE`
        echo "stopped."
        rm -f $RESPAWN_PIDFILE
        ;;

  restart)
        $0 stop $*
        sleep 2
        $0 start $*
        ;;

  *)
        echo "Usage: $0 {start|stop|restart} [nodename]"
        exit 1
esac

exit 0
